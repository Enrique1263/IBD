version: "3.8"

services:
  mongo1:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - mongo1_data:/data/db
      - mongo1_config:/data/configdb
    restart: always
    networks:
      - mongo-net

  mongo2:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    ports:
      - 27018:27018
    volumes:
      - mongo2_data:/data/db
      - mongo2_config:/data/configdb
    restart: always
    networks:
      - mongo-net

  mongo3:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    ports:
      - 27019:27019
    volumes:
      - mongo3_data:/data/db
      - mongo3_config:/data/configdb
    restart: always
    networks:
      - mongo-net

  starter:
    image: vramososuna/mongo-starter:latest
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net

  jupyter:
    image: vramososuna/jupyter-tester:latest
    ports:
      - '8888:8888'
    volumes:
      - ./notebooks:/app
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net

volumes:
  mongo1_data:
  mongo1_config:
  mongo2_data:
  mongo2_config:
  mongo3_data:
  mongo3_config:
    
networks:
  mongo-net:
    external: true
